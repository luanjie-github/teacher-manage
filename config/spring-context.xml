<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"    
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"   
	xmlns:p="http://www.springframework.org/schema/p"  
	xmlns:aop="http://www.springframework.org/schema/aop"   
	xmlns:context="http://www.springframework.org/schema/context"  
	xmlns:jee="http://www.springframework.org/schema/jee"  
	xmlns:tx="http://www.springframework.org/schema/tx"  
	xsi:schemaLocation="    
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd  
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd  
	http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd  
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
	<context:property-placeholder location="classpath:db.properties" />
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="username" value="${db.username}"></property>
		<property name="password" value="${db.password}"></property>
		<property name="driverClassName" value="${db.driverClassName}"></property>  
		<property name="url" value="${db.url}"></property>
		<property name="initialSize" value="5" /><!--    初始大小 -->  	
	</bean>

	<bean id="SpringApplicationContext" class="com.etm.util.ApplicationContextHelper"></bean>

	<!-- spring会话管理 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations">
			<list>
				<!-- 在com.kanq.app.archives.mapper包或以下所有目录中所有以.xml结尾的文件 -->
				<value>classpath:com/etm/mapper/*.xml</value>
			</list>
		</property>
	</bean>
	<!-- 自动扫描com.kanq.app.springmvc.mapper包下的Mapper接口,并实现其功能  -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.etm.dao" />
	</bean>
    
	<!-- spring事务管理 -->
	<bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
    
	<!--统一异常处理-->
	<bean id="exceptionHandler" class="com.etm.util.MyExceptionHandler"/>  
    
	<!-- 事务操作 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>  
			<tx:method name="insert*" propagation="REQUIRED" />  
			<tx:method name="update*" propagation="REQUIRED" />  
			<tx:method name="edit*" propagation="REQUIRED" />  
			<tx:method name="save*" propagation="REQUIRED" />  
			<tx:method name="add*" propagation="REQUIRED" />  
			<tx:method name="new*" propagation="REQUIRED" />  
			<tx:method name="set*" propagation="REQUIRED" />  
			<tx:method name="remove*" propagation="REQUIRED" />  
			<tx:method name="delete*" propagation="REQUIRED" />  
			<tx:method name="change*" propagation="REQUIRED" />  
			<tx:method name="get*" propagation="REQUIRED" read-only="true" />  
			<tx:method name="find*" propagation="REQUIRED" read-only="true" />  
			<tx:method name="load*" propagation="REQUIRED" read-only="true" />  
			<tx:method name="*" propagation="REQUIRED" read-only="true" />  
		</tx:attributes>  
	</tx:advice>
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	<aop:config>  
		<aop:pointcut id="serviceOperation" expression="execution(* com.etm.service..*.*(..))" />  
		<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceOperation" />  
	</aop:config>
	
	<context:annotation-config />
	<context:component-scan base-package="com.etm"/>
</beans>